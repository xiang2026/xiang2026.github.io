{"title":"从购买到部署，VPS+hexo博客构建记录 其之一","slug":"从购买到部署，VPS & hexo博客构建记录","date":"2018-01-27T05:44:05.000Z","updated":"2019-07-30T13:43:13.905Z","comments":true,"path":"api/articles/从购买到部署，VPS & hexo博客构建记录.json","photos":[],"link":"","excerpt":" [Figure] 写在开始之前这篇文章，或者说这一系列文章是记录我从购买VPS到使用hexo部署个人博客的整个流程的流水账。写这个文章一是为自己记录一下从VPS搭建到部署博客的整个过程，二是希望能对和我一样环境和需求的小伙伴提供一个还算清晰的构建过程。如果你只是想有一个写博客的地方用以记录自己的生活或者学习轨迹，那么简书一类的博客系统非常适合你，你不需要维护自己的服务器，不需要折腾博客的各种功能，只需要打开一个markdown的编辑器，开始自己的文字记录即可。或者更进一步，你也可以使用github pages + hexo之类的静态博客生成框架解决方案，这样你也可以在享受定制博客的同时免去维护的麻烦。最后只有你真的觉得上面两种bigger不够或者像我一样买了VPS本来只是为了挂ss，然后觉得一台服务器放着也是放着，干点啥练练手也好，同时又是喜欢折腾的人，这篇文章的内容才是适合你的。本来想写的全面一点，目标是让看了之后跟着做的人能够不踩坑，不折腾顺利搞出自己的博客来。然而仔细想想貌似自己有点太托大了，毕竟环境变化万千，各种情况都会在你部署服务器的过程中出现，万全的教程必定不可能存在，权当是我自己流程的记录，若能帮到别人一点，也算有点价值了。如果你是一边看一边做，请务必保证看完每一个小节再动手！在这篇文章你将会看到：购买DO（Digital Ocean）VPS，如何解封自己充钱被封的账号，如何申请github student package新建VPS安全防护设定（可选）ss架设，科学上网","covers":null,"content":"<p><img src=\"/2018/01/27/从购买到部署，VPS & hexo博客构建记录/title.jpg\" alt=\"title\"></p>\n<h3 id=\"写在开始之前\"><a href=\"#写在开始之前\" class=\"headerlink\" title=\"写在开始之前\"></a>写在开始之前</h3><p>这篇文章，或者说这一系列文章是记录我从购买VPS到使用hexo部署个人博客的整个流程的流水账。写这个文章一是为自己记录一下从VPS搭建到部署博客的整个过程，二是希望能对和我一样环境和需求的小伙伴提供一个还算清晰的构建过程。如果你只是想有一个写博客的地方用以记录自己的生活或者学习轨迹，那么简书一类的博客系统非常适合你，你不需要维护自己的服务器，不需要折腾博客的各种功能，只需要打开一个markdown的编辑器，开始自己的文字记录即可。或者更进一步，你也可以使用github pages + hexo之类的静态博客生成框架<a href=\"https://zhuanlan.zhihu.com/p/26625249\" target=\"_blank\" rel=\"noopener\">解决方案</a>，这样你也可以在享受定制博客的同时免去维护的麻烦。最后只有你真的觉得上面两种bigger不够或者像我一样买了VPS本来只是为了挂ss，然后觉得一台服务器放着也是放着，干点啥练练手也好，同时又是喜欢折腾的人，这篇文章的内容才是适合你的。</p>\n<p>本来想写的全面一点，目标是让看了之后跟着做的人能够不踩坑，不折腾顺利搞出自己的博客来。然而仔细想想貌似自己有点太托大了，毕竟环境变化万千，各种情况都会在你部署服务器的过程中出现，万全的教程必定不可能存在，权当是我自己流程的记录，若能帮到别人一点，也算有点价值了。</p>\n<p><strong>如果你是一边看一边做，请务必保证看完每一个小节再动手！</strong></p>\n<p>在这篇文章你将会看到：</p>\n<ul>\n<li>购买DO（Digital Ocean）VPS，如何解封自己充钱被封的账号，如何申请github student package</li>\n<li>新建VPS安全防护设定</li>\n<li>（可选）ss架设，科学上网</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"1-VPS购买-github-student-package\"><a href=\"#1-VPS购买-github-student-package\" class=\"headerlink\" title=\"1. VPS购买+github student package\"></a>1. VPS购买+github student package</h2><p>关于VPS的购买，现在有很多VPS的服务商可以挑选，由于DO是我购买的第一个VPS，其他服务商的产品并没有使用过，因此是没有推荐一说的。购买VPS其实主要是看服务器的稳定性，小型的个人网站其实只要512M即可，如果你买了很好的配置但是天天崩溃重启，那体验上其实是很蛋疼的。链路上最好能选择有CN2线路的服务商，能够提供比较好的速度和ping值控制，具体的选择和推荐我是看的知乎上的<a href=\"https://www.zhihu.com/question/20800554\" target=\"_blank\" rel=\"noopener\">讨论</a>。</p>\n<p>最终选择DO是因为使用别人的推荐链接可以获得10刀的优惠券，再加上以学生身份去申请github的student package可以获得一张50刀的优惠券，加起来就有60刀了，DO家最便宜的主机（1core + 1G RAM + 500G流量每月）每月是5刀的价格，也就是说这一套流程下来你可以免费用一年，而且配置对于初学者完全够用了。</p>\n<p><strong>可能的坑</strong>：首先，通过别人的推荐链接拿到的10刀是在你充值了5刀（DO家充值最低限度）之后才能拿到的，因此并不是白送你10刀。现在DO支持了paypal，在氪金友好度上还是可以的，之前关注的时候是需要绑定信用卡的。其次，github的student package是需要你的学生认证的，由于我自己是git的重度用户，上面有很多自己的项目，因此在进行认证的时候并没有要求上传学生证复印件啥的，就填了一个学校邮箱和学校姓名完事。最后，DO的系统默认友链的10刀优惠券和github的50刀优惠券不能同时用，因此，拿到github的优惠券之后，你需要去support页面开一个ticket让服务小哥帮你加进去。最后的最后，也是最坑的，DO由于有上述的优惠，导致国人大量注册新号各种玩，因此对于新开的中国ip的账号，很有可能被要求提供个人信息进行账号检测。</p>\n<p>上述的坑前面的还好说，基本上搜一搜都有对应的解决方案，但是最后一个并没有人提到，导致我欢欢喜喜充值完自己的5刀之后就看到了自己的账号under review的页面，欲哭无泪。这里先提醒下，在DO上氪金的时候最好选择paypal，原因下面说明。</p>\n<p>这个时候，DO系统会给你发送一份邮件，长下面这个样子，大致内容是要求你进入上面的页面并提供一些信息。</p>\n<p><img src=\"/2018/01/27/从购买到部署，VPS & hexo博客构建记录/02.png\" alt=\"02\"></p>\n<p>然而当我填完所有的信息之后又收到了一封邮件，要求提供我自己的身份证正反面复印件、以及一张自己举着身份证的照片，有点像国内网上银行签约那种要求。这个时候我就有点懵逼了，毕竟是自己的重要身份信息，需要慎重考虑一下。如果你觉得将自己的个人信息泄露给国外公司还是有风险，这个时候你就应该考虑怎么追回自己的5刀了。之前如果你用的是paypal氪金，可以通过paypal的交易争议，让paypal介入帮你讨回，具体可以参考<a href=\"https://www.freehao123.com/digitalocean-paypal/\" target=\"_blank\" rel=\"noopener\">这里</a>。一般自己去联系很难追回，这也是我之前建议使用paypal的原因。</p>\n<p>DO自己其实是有一个support center的，你要有什么问题想问客服，可以在这边开一个Ticket然后提问，具体点击顶部菜单的support然后进去后选择头像下拉菜单的Go to ticket就行，如下图所示。后续发来要求你提交照片的邮件的时候其实系统已经在support center帮你自动创建了对应的ticket，你的邮件是带有ticket号的，你可以选择直接回复邮件，将你的文件当作附件。也可以选择登陆support center提交证明文件。</p>\n<p><img src=\"/2018/01/27/从购买到部署，VPS & hexo博客构建记录/03.png\" alt=\"03\"></p>\n<p>最后在提交完证明后一天半，我的账户也解封了，不得不说DO的效率是很慢的，ticket其实还是邮件，DO的工作人员看到了才会回你，不会像国内的在线客服那样方便。现在想想为了60刀我也是蛮拼的。之后你还可以自己创建ticket让工作人员帮你把50刀的优惠券加到账户里去，只需写个简单的问题，譬如说我有一个优惠券但不知道怎么用之类就可以了，这里贴上我自己渣渣英语的ticket内容。之后工作人员会回复你让你把优惠券代码给他，然后你的账户就会多出50刀来，美滋滋。</p>\n<p><img src=\"/2018/01/27/从购买到部署，VPS & hexo博客构建记录/04.png\" alt=\"04\"></p>\n<p>至此，我才申请完DO的账号，终于可以开始搭建虚拟主机了，感觉别人很容易完成的东西在这边一脚一个坑，心累。</p>\n<p>登陆你的账号，点击右边的create - Droplets，开始建立你自己的VPS。在打开的Create Droplets页面上从上往下依次是需要安装的系统，购买的机器配置，机房位置，SSH key以及你自己的VPS名称。这里我选择了Ubuntu 16.04，5刀每月的配置，机房选择了旧金山。虽然地理上新加坡机房貌似离我们更近，但是有指出DO这边链接新加坡是通过美国的，所以美国还是稳一点，当然你可以自己测试一下线路再决定，DO官方给了测试页面，你可以通过<a href=\"http://speedtest-sgp1.digitalocean.com/\" target=\"_blank\" rel=\"noopener\">这里</a>访问。</p>\n<p>建立主机需要一定的时间，之后你就可以在你的Drpolets页面下看到刚刚建好的机器了，同时DO系统会发一封邮件到你的注册邮箱里，高速你主机的IP地址，登陆账号和密码，至此，你的VPS就建好了。</p>\n<p><strong>关于github student package</strong>：好了，现在来说说这个student package的申请，首先请访问<a href=\"https://education.github.com/pack/\" target=\"_blank\" rel=\"noopener\">申请页面</a>,点击页面上的Get your pack，登陆你的github账号，填入相应信息即可。不知道是不是由于我是github的用户了，系统并没有让我填写学校信息，只留了学校邮箱就通过了。通过之后你会收到一封邮件，同时再点Get your pack的时候就会有对应的优惠券细节了。邮件长下面这样，然后你只需要像上面说的那样联系DO客服让他们帮你加到账号里去就行了。</p>\n<p><img src=\"/2018/01/27/从购买到部署，VPS & hexo博客构建记录/05.jpg\" alt=\"05\"></p>\n<h2 id=\"2-一些简单的安全设置\"><a href=\"#2-一些简单的安全设置\" class=\"headerlink\" title=\"2. 一些简单的安全设置\"></a>2. 一些简单的安全设置</h2><p>拿到自己的机器之后，先别急着直接上手部署ss或者blog，最好最一些简单的设置，以免你的机器被那些扫端口的当作肉鸡。DO对于这种情况处置很严，一旦发现机器行为异常基本就封号了，因此为了免去后面的麻烦，前期简单的设置必不可少。</p>\n<h3 id=\"2-1-登陆VPS，修改root密码\"><a href=\"#2-1-登陆VPS，修改root密码\" class=\"headerlink\" title=\"2.1 登陆VPS，修改root密码\"></a>2.1 登陆VPS，修改root密码</h3><p>使用xshell或者putty通过ssh方式登陆VPS。第一次登陆时系统会强制你改掉密码，更换一个稍微复杂的密码然后记住。</p>\n<h3 id=\"2-2-修改ssh默认端口\"><a href=\"#2-2-修改ssh默认端口\" class=\"headerlink\" title=\"2.2 修改ssh默认端口\"></a>2.2 修改ssh默认端口</h3><p>ssh协议默认使用22端口，出于安全考虑我们可以替换掉它，降低被扫端口的风险。</p>\n<p>使用vim打开ssh服务的配置文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>\n<p>在文件的最开始你可以看到Port，修改掉后续的数字，保存退出。</p>\n<p><img src=\"/2018/01/27/从购买到部署，VPS & hexo博客构建记录/06.png\" alt=\"06\"></p>\n<p>保存的时候系统会提示你这个修改可能会影响后续ssh的正常登陆（当前链接不受影响），yes确定就好。先不要急着重启ssh服务，可以等做完下一步之后一起进行。</p>\n<h3 id=\"2-3-创建一般用户，禁用root账户ssh登陆\"><a href=\"#2-3-创建一般用户，禁用root账户ssh登陆\" class=\"headerlink\" title=\"2.3 创建一般用户，禁用root账户ssh登陆\"></a>2.3 创建一般用户，禁用root账户ssh登陆</h3><p>为你的VPS再创建一个账户，这个账户只有一般权限，但是可以登陆ssh，同时禁用root账户的ssh登陆。这样具有最高权限的账户无法登陆，而通过一般账户登陆上来之后只有很有限的权限。你自己用的时候可以先登陆再用su命令切换到root权限。</p>\n<p>创建新的用户，使用-d参数指定用户目录，事实上默认的useradd命令会自动生成用户目录，但是在我添加的过程中并没有，导致我后续登陆等一系列问题。然后通过passwd命令设置密码。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd -d /home/xxx xxx</span><br><span class=\"line\">passwd xxx</span><br></pre></td></tr></table></figure>\n<p>继续修改上面的sshd_config文件，将PermitRootLogin后面的yes改为no。保存并重启ssh服务。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service sshd restart</span><br></pre></td></tr></table></figure>\n<p>这个时候你的root账户已经不能登陆了，而且访问的端口也改成了你设置的值，使用原来的登录信息会提示访问被拒绝，断开当前的链接使用刚刚添加的用户和新端口登陆，测试下修改的效果。请记得登陆后使用su切换到root账户，本文以下命令默认在root账户下执行。</p>\n<h3 id=\"2-4-打开UFW防火墙，关闭多余端口\"><a href=\"#2-4-打开UFW防火墙，关闭多余端口\" class=\"headerlink\" title=\"2.4 打开UFW防火墙，关闭多余端口\"></a>2.4 打开UFW防火墙，关闭多余端口</h3><p>事实上，iptables才是linux下默认的防火墙，然而iptables那多到令人发指的命令看的让人脑壳疼，好在Ubuntu提供了一个好用的封装，叫做UFW。对于刚安装完的机器，ufw是没有启动的，你需要通过命令让他跑起来。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ufw <span class=\"built_in\">enable</span></span><br></pre></td></tr></table></figure>\n<p>然后你可以查看当前的防火墙端口状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ufw status</span><br></pre></td></tr></table></figure>\n<p>上面的命令会返回当前的端口设置情况，就像下面这样：</p>\n<p><img src=\"/2018/01/27/从购买到部署，VPS & hexo博客构建记录/07.jpg\" alt=\"07\"></p>\n<p>最左边To的那一栏是当前可用的端口号，默认情况下至少会有22（ssh），80（http），443（https）。</p>\n<p>在规则中添加端口采用allow参数，你可以这样写：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ufw allow xxx</span><br></pre></td></tr></table></figure>\n<p>其中xxx是你要开放的端口，这里你需要<strong>将你上面修改的ssh端口加入进去</strong>，否则你将再也访问不到这台电脑（ssh端口已改，而防火墙又只能允许22端口访问）。同时你可以将默认的22端口取消访问权限，使用以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ufw delete allow 22</span><br></pre></td></tr></table></figure>\n<p>UFW还有很多简化后的命令都很好记，具体可以参考<a href=\"http://notes.maxwi.com/2017/01/19/linux-command-tools-ufw/\" target=\"_blank\" rel=\"noopener\">这里</a>。同时还要记得以后每一次我们添加完需要网络通讯的服务后都需要在UFW里打开对应的端口。</p>\n<h3 id=\"2-5-安装fail2ban软件\"><a href=\"#2-5-安装fail2ban软件\" class=\"headerlink\" title=\"2.5  安装fail2ban软件\"></a>2.5  安装fail2ban软件</h3><p>可以有效防止攻击的一个软件，将尝试爆破ssh密码的IP封停一段时间</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install fail2ban</span><br></pre></td></tr></table></figure>\n<p>至此，关于新VPS的安全防护基本完成，当然你可以再添加其他的安全防护。接下来我们就可以在我们的VPS上部署blog了。</p>\n<h2 id=\"3-科学上网（可选）\"><a href=\"#3-科学上网（可选）\" class=\"headerlink\" title=\"3.  科学上网（可选）\"></a>3.  科学上网（可选）</h2><p>有了这么一台服务器还是需要好好利用一下的，毕竟很多人（包括我）购买VPS的最初目的就是能够科学上网，我本人对于油管没有任何兴趣，完全只是需要一个稳定的google服务，因为相比于谷歌的搜索结果，想在百度的结果页面里找出能用的东西真是太难了。</p>\n<p>细节东西不多讲，所有相关资料都可以在ss的github wiki页面里找到，你可以访问<a href=\"https://github.com/shadowsocks/shadowsocks/wiki\" target=\"_blank\" rel=\"noopener\">这里</a>。</p>\n<p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install python-pip</span><br><span class=\"line\">pip install shadowsocks</span><br></pre></td></tr></table></figure>\n<p>创建ss的配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/shadowsocks.json</span><br></pre></td></tr></table></figure>\n<p>在文件内写入以下内容</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"server\"</span>:<span class=\"string\">\"你的服务器ip地址\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"server_port\"</span>:<span class=\"number\">8388</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"local_address\"</span>: <span class=\"string\">\"127.0.0.1\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"local_port\"</span>:<span class=\"number\">1080</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"password\"</span>:<span class=\"string\">\"你设置的密码\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"timeout\"</span>:<span class=\"number\">300</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"method\"</span>:<span class=\"string\">\"aes-256-cfb\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"fast_open\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在后台启动服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssserver -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure>\n<p>在本地使用ss的客户端链接你的服务器即可，注意ss服务端默认使用8838端口，你可以修改这个端口，但记得在自己的UFW配置里加入相应端口。</p>\n<p>最后你可以将ss的服务设为开机自启动，免去VPS这边不稳定导致的重启造成无法连接的情况。</p>\n<p>Ubuntu与centOS有不同的处理方法，centOS请参考<a href=\"http://www.edbiji.com/doccenter/showdoc/78/nav/994.html\" target=\"_blank\" rel=\"noopener\">这里</a>。Ubuntu需要修改rc.local脚本，默认的脚本长这个样子：</p>\n<p><img src=\"/2018/01/27/从购买到部署，VPS & hexo博客构建记录/08.jpg\" alt=\"08\"></p>\n<p>它事实上是一个shell脚本，将你启动服务的命令添加在exit 0之前即可。</p>\n<p>Horo·C</p>\n","categories":[],"tags":[{"name":"建站","slug":"建站","count":3,"path":"api/tags/建站.json"}]}